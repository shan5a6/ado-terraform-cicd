trigger:
- none

parameters:
  - name: ENV
    type: string 
    default: "dev"
    values:
      - dev
      - prod
  - name: ACTION
    type: string
    default: "plan"
    values:
      - "plan"
      - "apply"
      - "destroy"

pool:
  vmImage: ubuntu-latest

steps:
- task: TerraformCLI@2
  displayName: "Terraform init"
  inputs:
    command: 'init'
    backendType: 'azurerm'
    backendServiceArm: 'Pay-As-You-Go (69fc0447-bb32-4449-bce8-002d5b9938c9)'
    allowTelemetryCollection: false

- task: TerraformCLI@2
  displayName: "Create workspace if not exists"
  inputs:
    command: 'workspace'
    workspaceSubCommand: 'new'
    workspaceName: '${{ parameters.ENV }}'
    allowTelemetryCollection: false
    skipExistingWorkspace: true
    
- task: TerraformCLI@2
  inputs:
    command: 'workspace'
    allowTelemetryCollection: true
    workspaceName: '${{ parameters.ENV }}'

- ${{ if eq(parameters.ACTION, 'plan') }}:
  - task: TerraformCLI@2
    displayName: "Terraform plan"
    inputs:
      command: 'plan'
      environmentServiceName: 'Pay-As-You-Go (69fc0447-bb32-4449-bce8-002d5b9938c9)'
      runAzLogin: true
      commandOptions: '-var-file  ${{ parameters.ENV }}.tfvars'
      allowTelemetryCollection: false

- ${{ elseif eq(parameters.ACTION, 'apply') }}:
  - task: TerraformCLI@2
    displayName: "Terraform apply"
    inputs:
      command: 'apply'
      environmentServiceName: 'Pay-As-You-Go (69fc0447-bb32-4449-bce8-002d5b9938c9)'
      runAzLogin: true
      commandOptions: '-var-file ${{ parameters.ENV }}.tfvars'
      allowTelemetryCollection: false

- ${{ elseif eq(parameters.action, 'destroy') }}:
  - task: TerraformCLI@2
    displayName: "Terraform destroy"
    inputs:
      command: 'destroy'
      environmentServiceName: 'Pay-As-You-Go (69fc0447-bb32-4449-bce8-002d5b9938c9)'
      runAzLogin: true
      commandOptions: '-var-file ${{ parameters.ENV }}.tfvars'
      allowTelemetryCollection: false
